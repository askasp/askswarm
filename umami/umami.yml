version: '3'
services:
  web:
    image: ghcr.io/umami-software/umami:postgresql-latest

    networks:
      - "net"
      - "ingress_traefik_external"

      
    deploy: 
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.umami.rule=Host(`umami.akselerasjon.no`)"
        - "traefik.http.routers.umami.entrypoints=websecure"
        - "traefik.http.routers.umami.tls.certresolver=myresolver"
        - "traefik.http.services.umami.loadbalancer.server.port=3000"

      placement:      
        constraints:
          - node.labels.worker == true
      
    environment:
      DATABASE_URL: postgresql://umami:umami@db:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: random_string_secret
    restart: always
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: umami
      POSTGRES_USER: umami
      POSTGRES_PASSWORD: umami
    networks:
      - "net"
    volumes:
      - type: bind
        source: /media/willusb/umami-data
        target: /var/lib/postgresql/data
        
    deploy: 
      placement:      
        constraints:
          - node.labels.role == persistent_storage_1
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  umami-db-data:

networks:
  net:
  ingress_traefik_external:
    external: true
